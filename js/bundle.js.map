{"version":3,"file":"bundle.js","mappings":"mBAAA,SAASA,EAAWC,EAAiBC,GACnCA,EAAUC,UAAYF,EACnBG,KAAI,CAACC,EAAWC,IACR,6BAETD,EAAUE,KAAO,OAAS,iCACGF,EAAUG,qGAEiBF,KACpDD,EAAUE,KAAO,UAAY,kCAETF,EAAUI,2DACMH,yQAUpCD,EAAUK,kCAKbC,KAAK,GACV,CCGA,MCLA,EAxBA,SAAoBV,EAAiBC,GAoBnCA,EAAUU,iBAAiB,SAAS,EAAGC,cATvC,SAAoBA,GAClB,MAAMC,EAAOD,EAAOE,QAAQ,eAC5B,IAAKF,EAAOG,QAAQ,SAAU,OAC9B,MAAMC,EAAQJ,EAAOK,QAAQD,MAC7BhB,EAAgBgB,GAAOV,MAAQN,EAAgBgB,GAAOV,KACtDY,aAAaC,QAAQ,QAASC,KAAKC,UAAUrB,IAd/C,SAAyBI,EAAWY,GAC9BhB,EAAgBgB,GAAOV,KAEzBF,EAAUkB,UAAUC,IAAI,QAExBnB,EAAUkB,UAAUE,OAAO,OAE/B,CAQEC,CAAgBZ,EAAMG,EACxB,CAGEU,CAAWd,EAAO,GAEtB,EClBAe,OAAOhB,iBAAiB,oBAAoB,KAC1C,MAAMiB,EAAQR,KAAKS,MAAMX,aAAaY,QAAQ,WAAa,GACrD7B,EAAY8B,SAASC,cAAc,gBFN3C,SAAiBC,EAAcjC,EAAiBC,GAC9C,MAAMiC,EAAOH,SAASC,cAAcC,GAoBpCC,EAAKvB,iBAAiB,UAAWwB,KAnBjC,SAAiBA,GACfA,EAAEC,iBACF,MAGMvB,EAAO,CACXN,SGXeA,EHOW2B,EAAKG,MAAMC,MGNzB,WAAZ/B,GAAoC,WAAZA,EACnB,GAAGA,iBAEH,GAAGA,kBHQRC,SAJe0B,EAAKK,MAAMD,MAK1B7B,SAJeyB,EAAKzB,SAAS6B,MAK7BhC,MAAM,EACNkC,MAAM,IAAIC,MAAOC,WGfvB,IAAqBnC,EHkBjBP,EAAgB2C,KAAK9B,GACrBd,EAAWC,EAAiBC,GAC5BiB,aAAaC,QAAQ,QAASC,KAAKC,UAAUrB,IAC7CkC,EAAKU,OACP,CAGEC,CAAQV,EAAE,IAGZpC,EAAWC,EAAiBC,EAC9B,EElBE,CAAQ,QAAQ2B,EAAO3B,GEXzB,SAAgBgC,EAAaa,EAAgBC,GAC3C,MAAMb,EAAOH,SAASC,cAAcC,GAE9Be,EAAejB,SAASC,cAAcc,GACtCG,EAAiBlB,SAASC,cAAce,GAE9CC,EAAarC,iBAAiB,SAAS,KACrCqC,EAAa1B,UAAU4B,OAAO,UAC9BD,EAAe3B,UAAU4B,OAAO,uBAAuB,IAGzDhB,EAAKvB,iBAAiB,UAAWwB,IAC/Ba,EAAa1B,UAAU4B,OAAO,UAC9BD,EAAe3B,UAAU4B,OAAO,uBAAuB,GAE3D,CFFE,CAAO,QAAQ,UAAW,gBGb5B,SAAoBlD,EAAiBC,GAYnCA,EAAUU,iBAAiB,SAAS,EAAGC,aACrC,MAAMC,EAAOD,EAAOE,QAAQ,gBAX9B,SAAoBF,EAAQR,GAC1B,MAAM+C,EAAevC,EAAOE,QAAQ,iBACpC,GAAIqC,EAAc,CAChB,MAAMC,EAAsBD,EAAalC,QAAQoC,OACjDjD,EAAUoB,SACVxB,EAAgBsD,OAAOF,EAAqB,GAC5ClC,aAAaC,QAAQ,QAASC,KAAKC,UAAUrB,GAC/C,CACF,CAIEuD,CAAW3C,EAAQC,EAAK,GAE5B,CHFE,CAAWe,EAAO3B,GIdpB,SAAuBuD,GACrB,MAAMC,EAAQ1B,SAASC,cAAcwB,GAE/BE,EAAgB,CACpB,SACA,SACA,UACA,YACA,WACA,SACA,YAEIlB,EAAO,IAAIC,MAEjB,WACE,IAAIkB,EAAUD,EAAclB,EAAKoB,UAE7BC,EAAQ,IAAIC,KAAKC,eAAe,QADpB,CAAEF,MAAO,SAC6BG,OAAOxB,GACzDyB,EAAMzB,EAAK0B,UACfT,EAAMvD,UAAY,4BAA4ByD,cAAoBE,KAASI,GAC7E,CACAE,EACF,CJPE,CAAc,UACd,EAAWvC,EAAO3B,GKhBpB,SAAemE,GACb,MAAMC,EAAQtC,SAASC,cAAcoC,GAwBrCzC,OAAOhB,iBAAiB,QAtBxB,WACE,IAAI6B,EAAO,IAAIC,KACX6B,EAAQ9B,EAAK+B,WACbC,EAAUhC,EAAKiC,aACfC,EAAU,KAEA,IAAVJ,IACFA,EAAQ,IAENA,EAAQ,KACVA,GAAgB,GAChBI,EAAU,MAGZJ,EAAQA,EAAQ,GAAK,IAAMA,EAAQA,EACnCE,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EAIzCH,EAAMnE,UAAY,GAAGoE,KAASE,kCAAwCE,UACxE,GAGF,CLTE,CAAM,SAAS,G","sources":["webpack:///./js/modules/createTask.js","webpack:///./js/modules/addTask.js","webpack:///./js/modules/toggleDone.js","webpack:///./js/script.js","webpack:///./js/modules/checkColor.js","webpack:///./js/modules/burger.js","webpack:///./js/modules/deleteTask.js","webpack:///./js/modules/showTodayDate.js","webpack:///./js/modules/clock.js"],"sourcesContent":["function createTask(rememberedTasks, tasksList) {\r\n  tasksList.innerHTML = rememberedTasks\r\n    .map((taskBlock, i) => {\r\n      return `\r\n  <li class=\"task__item ${\r\n    taskBlock.done ? \"done\" : \"\"\r\n  }\" style=\"background-color: #${taskBlock.bgColor};\" >\r\n  <div class=\"task__top\">\r\n    <input class=\"task__input\" type=\"checkbox\" data-index=${i} ${\r\n        taskBlock.done ? \"checked\" : \"\"\r\n      }>\r\n    <p class=\"task__name\">${taskBlock.taskName}</p>\r\n    <div class=\"task__delete\" data-delete=${i}>\r\n      <svg class=\"icon-delete\">\r\n        <use xlink:href=\"sprite.svg#delete\"></use>\r\n      </svg>\r\n    </div>\r\n  </div>\r\n    <p class=\"task__deadline\">\r\n    <svg class=\"icon icon-color\">\r\n      <use xlink:href=\"sprite.svg#deadline\"></use>\r\n    </svg>\r\n      ${taskBlock.deadline}\r\n    </p>\r\n  </li>\r\n`;\r\n    })\r\n    .join(\"\");\r\n}\r\nexport { createTask };\r\n","import { createTask } from \"./createTask\";\r\nimport { checkCkolor } from \"./checkColor\";\r\n\r\nfunction addTask(formSelector, rememberedTasks, tasksList) {\r\n  const form = document.querySelector(formSelector);\r\n  function addTask(e) {\r\n    e.preventDefault();\r\n    const bgColor = checkCkolor(form.color.value);\r\n    const taskName = form.title.value;\r\n    const deadline = form.deadline.value;\r\n    const task = {\r\n      bgColor,\r\n      taskName,\r\n      deadline,\r\n      done: false,\r\n      date: new Date().getTime(),\r\n    };\r\n\r\n    rememberedTasks.push(task);\r\n    createTask(rememberedTasks, tasksList);\r\n    localStorage.setItem(\"tasks\", JSON.stringify(rememberedTasks));\r\n    form.reset();\r\n  }\r\n\r\n  form.addEventListener(\"submit\", (e) => {\r\n    addTask(e);\r\n  });\r\n\r\n  createTask(rememberedTasks, tasksList);\r\n}\r\n\r\nexport default addTask;\r\n","import { createAudio } from \"./audio\";\r\n\r\nfunction toggleDone(rememberedTasks, tasksList) {\r\n\r\n  function toggleDoneClass(taskBlock, index) {\r\n    if (rememberedTasks[index].done) {\r\n      // createAudio(\"../sounds/done.wav\");\r\n      taskBlock.classList.add(\"done\");\r\n    } else {\r\n      taskBlock.classList.remove(\"done\");\r\n    }\r\n  }\r\n\r\n  function toggleDone(target) {\r\n    const task = target.closest(\".task__item\");\r\n    if (!target.matches(\"input\")) return;\r\n    const index = target.dataset.index;\r\n    rememberedTasks[index].done = !rememberedTasks[index].done;\r\n    localStorage.setItem(\"tasks\", JSON.stringify(rememberedTasks));\r\n    toggleDoneClass(task, index);\r\n  }\r\n\r\n  tasksList.addEventListener(\"click\", ({ target }) => {\r\n    toggleDone(target);\r\n  });\r\n}\r\nexport default toggleDone;\r\n","import addTask from \"./modules/addTask\";\r\n// import audio from \"./modules/audio\";\r\nimport burger from \"./modules/burger\";\r\nimport deleteTask from \"./modules/deleteTask\";\r\nimport showTodayDate from \"./modules/showTodayDate\";\r\nimport toggleDone from \"./modules/toggleDone\";\r\nimport clock from \"./modules/clock\";\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  const tasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n  const tasksList = document.querySelector(\".task__list\");\r\n\r\n  addTask(\".form\",tasks, tasksList);\r\n  // audio();\r\n  burger(\".form\",\".burger\", \".create-task\");\r\n  deleteTask(tasks, tasksList);\r\n  showTodayDate(\".today\");\r\n  toggleDone(tasks, tasksList);\r\n  clock(\".clock\");\r\n});\r\n","function checkCkolor(bgColor) {\r\n  if (bgColor === \"000000\" || bgColor === \"3D3270\") {\r\n    return `${bgColor}; color: #fff`;\r\n  } else {\r\n    return `${bgColor}; color: #000`;\r\n  }\r\n}\r\n\r\nexport {checkCkolor};","function burger(formSelector,burgerSelector, createTaskFormSelector) {\r\n  const form = document.querySelector(formSelector);\r\n\r\n  const burgerButton = document.querySelector(burgerSelector);\r\n  const createTaskForm = document.querySelector(createTaskFormSelector);\r\n\r\n  burgerButton.addEventListener(\"click\", () => {\r\n    burgerButton.classList.toggle(\"active\");\r\n    createTaskForm.classList.toggle(\"create-task--visible\");\r\n  });\r\n\r\n  form.addEventListener(\"submit\", (e) => {\r\n    burgerButton.classList.toggle(\"active\");\r\n    createTaskForm.classList.toggle(\"create-task--visible\");\r\n  });\r\n}\r\n\r\nexport default burger;\r\n","function deleteTask(rememberedTasks, tasksList) {\r\n\r\n  function deleteTask(target, taskBlock) {\r\n    const deleteButton = target.closest(\".task__delete\");\r\n    if (deleteButton) {\r\n      const indexOfDeleteButton = deleteButton.dataset.delete;\r\n      taskBlock.remove();\r\n      rememberedTasks.splice(indexOfDeleteButton, 1);\r\n      localStorage.setItem(\"tasks\", JSON.stringify(rememberedTasks));\r\n    }\r\n  }\r\n\r\n  tasksList.addEventListener(\"click\", ({ target }) => {\r\n    const task = target.closest(\".task__item\");\r\n    deleteTask(target, task);\r\n  });\r\n}\r\n\r\nexport default deleteTask;\r\n","function showTodayDate(todaySelector) {\r\n  const today = document.querySelector(todaySelector);\r\n\r\n  const daysOfTheWeek = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const date = new Date();\r\n\r\n  function showTodayDate() {\r\n    let weekday = daysOfTheWeek[date.getDay()];\r\n    const options = { month: \"long\" };\r\n    let month = new Intl.DateTimeFormat(\"en-US\", options).format(date);\r\n    let day = date.getDate();\r\n    today.innerHTML = `<span class=\"today__day\">${weekday},</span>  ${month} ${day}`;\r\n  }\r\n  showTodayDate();\r\n}\r\n\r\nexport default showTodayDate;\r\n","function clock(clockSelector) {\r\n  const clock = document.querySelector(clockSelector);\r\n\r\n  function currentTime() {\r\n    let date = new Date();\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let session = \"AM\";\r\n\r\n    if (hours === 0) {\r\n      hours = 12;\r\n    }\r\n    if (hours > 12) {\r\n      hours = hours - 12;\r\n      session = \"PM\";\r\n    }\r\n\r\n    hours = hours < 10 ? \"0\" + hours : hours;\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n\r\n    // let time = ;\r\n\r\n    clock.innerHTML = `${hours}:${minutes} <span class=\"clock__session\">${session}</span>`;\r\n  }\r\n\r\n  window.addEventListener(\"load\", currentTime);\r\n}\r\n\r\nexport default clock;\r\n"],"names":["createTask","rememberedTasks","tasksList","innerHTML","map","taskBlock","i","done","bgColor","taskName","deadline","join","addEventListener","target","task","closest","matches","index","dataset","localStorage","setItem","JSON","stringify","classList","add","remove","toggleDoneClass","toggleDone","window","tasks","parse","getItem","document","querySelector","formSelector","form","e","preventDefault","color","value","title","date","Date","getTime","push","reset","addTask","burgerSelector","createTaskFormSelector","burgerButton","createTaskForm","toggle","deleteButton","indexOfDeleteButton","delete","splice","deleteTask","todaySelector","today","daysOfTheWeek","weekday","getDay","month","Intl","DateTimeFormat","format","day","getDate","showTodayDate","clockSelector","clock","hours","getHours","minutes","getMinutes","session"],"sourceRoot":""}